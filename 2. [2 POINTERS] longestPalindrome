/*Given a string s, return the longest palindromic substring in s.
Example 1:
Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:
Input: s = "cbbd"
Output: "bb"*/

/*even palindrome: centre lies in between the letters
odd palindrome: centre lies in the middle letter*/

class Solution {
    public String longestPalindrome(String s) {
        if(s==null||s.length()<1){
            return "";
        }
        int maxlen = 0, start=0;
        for(int i=0;i<s.length();i++){
            int l=i,r=i;
            while(l>=0 && r<s.length() && s.charAt(l)==s.charAt(r)){
                if(r-l+1>maxlen){
                    start=l;
                    maxlen = r-l+1;
                }
                l--;
                r++;
            }
            l=i;
            r=i+1;
            while(l>=0 && r<s.length() && s.charAt(l)==s.charAt(r)){
                if(r-l+1>maxlen){
                    start=l;
                    maxlen = r-l+1;
                }
                l--;
                r++;
            }            
        }
        return s.substring(start, start+maxlen);
    }
}
